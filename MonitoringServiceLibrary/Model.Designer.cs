//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("MonitoringModel", "FK_Calibration_Ids", "Ids", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MonitoringServiceLibrary.Id), "Calibration", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MonitoringServiceLibrary.Calibration), true)]
[assembly: EdmRelationshipAttribute("MonitoringModel", "FK_DeviceStatusHistory_DeviceStatus", "DeviceStatus", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MonitoringServiceLibrary.DeviceStatu), "DeviceStatusHistory", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MonitoringServiceLibrary.DeviceStatusHistory), true)]
[assembly: EdmRelationshipAttribute("MonitoringModel", "FK_DeviceStatusHistoryLastValues_DeviceStatus", "DeviceStatus", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(MonitoringServiceLibrary.DeviceStatu), "DeviceStatusHistoryLastValues", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MonitoringServiceLibrary.DeviceStatusHistoryLastValue), true)]
[assembly: EdmRelationshipAttribute("MonitoringModel", "FK_HistoricalData_Ids", "Ids", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MonitoringServiceLibrary.Id), "HistoricalData", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MonitoringServiceLibrary.HistoricalData), true)]
[assembly: EdmRelationshipAttribute("MonitoringModel", "FK_LastValues_Ids", "Ids", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MonitoringServiceLibrary.Id), "LastValues", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(MonitoringServiceLibrary.LastValue), true)]
[assembly: EdmRelationshipAttribute("MonitoringModel", "FK_ReadIntervals_Ids", "Ids", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MonitoringServiceLibrary.Id), "ReadIntervals", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MonitoringServiceLibrary.ReadInterval), true)]
[assembly: EdmRelationshipAttribute("MonitoringModel", "FK_UpdateDetails_Update", "Update", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MonitoringServiceLibrary.Update), "UpdateDetails", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MonitoringServiceLibrary.UpdateDetail), true)]

#endregion

namespace MonitoringServiceLibrary
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class MonitoringEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new MonitoringEntities object using the connection string found in the 'MonitoringEntities' section of the application configuration file.
        /// </summary>
        public MonitoringEntities() : base("name=MonitoringEntities", "MonitoringEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new MonitoringEntities object.
        /// </summary>
        public MonitoringEntities(string connectionString) : base(connectionString, "MonitoringEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new MonitoringEntities object.
        /// </summary>
        public MonitoringEntities(EntityConnection connection) : base(connection, "MonitoringEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Calibration> Calibrations
        {
            get
            {
                if ((_Calibrations == null))
                {
                    _Calibrations = base.CreateObjectSet<Calibration>("Calibrations");
                }
                return _Calibrations;
            }
        }
        private ObjectSet<Calibration> _Calibrations;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DeviceStatu> DeviceStatus
        {
            get
            {
                if ((_DeviceStatus == null))
                {
                    _DeviceStatus = base.CreateObjectSet<DeviceStatu>("DeviceStatus");
                }
                return _DeviceStatus;
            }
        }
        private ObjectSet<DeviceStatu> _DeviceStatus;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DeviceStatusHistory> DeviceStatusHistories
        {
            get
            {
                if ((_DeviceStatusHistories == null))
                {
                    _DeviceStatusHistories = base.CreateObjectSet<DeviceStatusHistory>("DeviceStatusHistories");
                }
                return _DeviceStatusHistories;
            }
        }
        private ObjectSet<DeviceStatusHistory> _DeviceStatusHistories;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DeviceStatusHistoryLastValue> DeviceStatusHistoryLastValues
        {
            get
            {
                if ((_DeviceStatusHistoryLastValues == null))
                {
                    _DeviceStatusHistoryLastValues = base.CreateObjectSet<DeviceStatusHistoryLastValue>("DeviceStatusHistoryLastValues");
                }
                return _DeviceStatusHistoryLastValues;
            }
        }
        private ObjectSet<DeviceStatusHistoryLastValue> _DeviceStatusHistoryLastValues;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<HistoricalData> HistoricalDatas
        {
            get
            {
                if ((_HistoricalDatas == null))
                {
                    _HistoricalDatas = base.CreateObjectSet<HistoricalData>("HistoricalDatas");
                }
                return _HistoricalDatas;
            }
        }
        private ObjectSet<HistoricalData> _HistoricalDatas;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Id> Ids
        {
            get
            {
                if ((_Ids == null))
                {
                    _Ids = base.CreateObjectSet<Id>("Ids");
                }
                return _Ids;
            }
        }
        private ObjectSet<Id> _Ids;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<LastValue> LastValues
        {
            get
            {
                if ((_LastValues == null))
                {
                    _LastValues = base.CreateObjectSet<LastValue>("LastValues");
                }
                return _LastValues;
            }
        }
        private ObjectSet<LastValue> _LastValues;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ReadInterval> ReadIntervals
        {
            get
            {
                if ((_ReadIntervals == null))
                {
                    _ReadIntervals = base.CreateObjectSet<ReadInterval>("ReadIntervals");
                }
                return _ReadIntervals;
            }
        }
        private ObjectSet<ReadInterval> _ReadIntervals;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Update> Updates
        {
            get
            {
                if ((_Updates == null))
                {
                    _Updates = base.CreateObjectSet<Update>("Updates");
                }
                return _Updates;
            }
        }
        private ObjectSet<Update> _Updates;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UpdateDetail> UpdateDetails
        {
            get
            {
                if ((_UpdateDetails == null))
                {
                    _UpdateDetails = base.CreateObjectSet<UpdateDetail>("UpdateDetails");
                }
                return _UpdateDetails;
            }
        }
        private ObjectSet<UpdateDetail> _UpdateDetails;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Calibrations EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCalibrations(Calibration calibration)
        {
            base.AddObject("Calibrations", calibration);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DeviceStatus EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDeviceStatus(DeviceStatu deviceStatu)
        {
            base.AddObject("DeviceStatus", deviceStatu);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DeviceStatusHistories EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDeviceStatusHistories(DeviceStatusHistory deviceStatusHistory)
        {
            base.AddObject("DeviceStatusHistories", deviceStatusHistory);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DeviceStatusHistoryLastValues EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDeviceStatusHistoryLastValues(DeviceStatusHistoryLastValue deviceStatusHistoryLastValue)
        {
            base.AddObject("DeviceStatusHistoryLastValues", deviceStatusHistoryLastValue);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the HistoricalDatas EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToHistoricalDatas(HistoricalData historicalData)
        {
            base.AddObject("HistoricalDatas", historicalData);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Ids EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToIds(Id id)
        {
            base.AddObject("Ids", id);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LastValues EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLastValues(LastValue lastValue)
        {
            base.AddObject("LastValues", lastValue);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ReadIntervals EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToReadIntervals(ReadInterval readInterval)
        {
            base.AddObject("ReadIntervals", readInterval);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Updates EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUpdates(Update update)
        {
            base.AddObject("Updates", update);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UpdateDetails EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUpdateDetails(UpdateDetail updateDetail)
        {
            base.AddObject("UpdateDetails", updateDetail);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MonitoringModel", Name="Calibration")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Calibration : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Calibration object.
        /// </summary>
        /// <param name="calibrationId">Initial value of the CalibrationId property.</param>
        /// <param name="idId">Initial value of the IdId property.</param>
        /// <param name="calibrationOperation">Initial value of the CalibrationOperation property.</param>
        /// <param name="calibrationValue">Initial value of the CalibrationValue property.</param>
        /// <param name="isEnabled">Initial value of the IsEnabled property.</param>
        /// <param name="date">Initial value of the Date property.</param>
        /// <param name="timestamp">Initial value of the timestamp property.</param>
        public static Calibration CreateCalibration(global::System.Int32 calibrationId, global::System.Int32 idId, global::System.Int32 calibrationOperation, global::System.Double calibrationValue, global::System.Boolean isEnabled, global::System.DateTime date, global::System.Byte[] timestamp)
        {
            Calibration calibration = new Calibration();
            calibration.CalibrationId = calibrationId;
            calibration.IdId = idId;
            calibration.CalibrationOperation = calibrationOperation;
            calibration.CalibrationValue = calibrationValue;
            calibration.IsEnabled = isEnabled;
            calibration.Date = date;
            calibration.timestamp = timestamp;
            return calibration;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CalibrationId
        {
            get
            {
                return _CalibrationId;
            }
            set
            {
                if (_CalibrationId != value)
                {
                    OnCalibrationIdChanging(value);
                    ReportPropertyChanging("CalibrationId");
                    _CalibrationId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CalibrationId");
                    OnCalibrationIdChanged();
                }
            }
        }
        private global::System.Int32 _CalibrationId;
        partial void OnCalibrationIdChanging(global::System.Int32 value);
        partial void OnCalibrationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IdId
        {
            get
            {
                return _IdId;
            }
            set
            {
                OnIdIdChanging(value);
                ReportPropertyChanging("IdId");
                _IdId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IdId");
                OnIdIdChanged();
            }
        }
        private global::System.Int32 _IdId;
        partial void OnIdIdChanging(global::System.Int32 value);
        partial void OnIdIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CalibrationOperation
        {
            get
            {
                return _CalibrationOperation;
            }
            set
            {
                OnCalibrationOperationChanging(value);
                ReportPropertyChanging("CalibrationOperation");
                _CalibrationOperation = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CalibrationOperation");
                OnCalibrationOperationChanged();
            }
        }
        private global::System.Int32 _CalibrationOperation;
        partial void OnCalibrationOperationChanging(global::System.Int32 value);
        partial void OnCalibrationOperationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double CalibrationValue
        {
            get
            {
                return _CalibrationValue;
            }
            set
            {
                OnCalibrationValueChanging(value);
                ReportPropertyChanging("CalibrationValue");
                _CalibrationValue = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CalibrationValue");
                OnCalibrationValueChanged();
            }
        }
        private global::System.Double _CalibrationValue;
        partial void OnCalibrationValueChanging(global::System.Double value);
        partial void OnCalibrationValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsEnabled
        {
            get
            {
                return _IsEnabled;
            }
            set
            {
                OnIsEnabledChanging(value);
                ReportPropertyChanging("IsEnabled");
                _IsEnabled = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsEnabled");
                OnIsEnabledChanged();
            }
        }
        private global::System.Boolean _IsEnabled;
        partial void OnIsEnabledChanging(global::System.Boolean value);
        partial void OnIsEnabledChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private global::System.DateTime _Date;
        partial void OnDateChanging(global::System.DateTime value);
        partial void OnDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] timestamp
        {
            get
            {
                return StructuralObject.GetValidValue(_timestamp);
            }
            set
            {
                OntimestampChanging(value);
                ReportPropertyChanging("timestamp");
                _timestamp = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("timestamp");
                OntimestampChanged();
            }
        }
        private global::System.Byte[] _timestamp;
        partial void OntimestampChanging(global::System.Byte[] value);
        partial void OntimestampChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MonitoringModel", "FK_Calibration_Ids", "Ids")]
        public Id Id
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Id>("MonitoringModel.FK_Calibration_Ids", "Ids").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Id>("MonitoringModel.FK_Calibration_Ids", "Ids").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Id> IdReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Id>("MonitoringModel.FK_Calibration_Ids", "Ids");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Id>("MonitoringModel.FK_Calibration_Ids", "Ids", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MonitoringModel", Name="DeviceStatu")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DeviceStatu : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DeviceStatu object.
        /// </summary>
        /// <param name="statusId">Initial value of the StatusId property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        /// <param name="statusColor">Initial value of the StatusColor property.</param>
        public static DeviceStatu CreateDeviceStatu(global::System.Int32 statusId, global::System.String status, global::System.String description, global::System.Int32 statusColor)
        {
            DeviceStatu deviceStatu = new DeviceStatu();
            deviceStatu.StatusId = statusId;
            deviceStatu.Status = status;
            deviceStatu.Description = description;
            deviceStatu.StatusColor = statusColor;
            return deviceStatu;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 StatusId
        {
            get
            {
                return _StatusId;
            }
            set
            {
                if (_StatusId != value)
                {
                    OnStatusIdChanging(value);
                    ReportPropertyChanging("StatusId");
                    _StatusId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("StatusId");
                    OnStatusIdChanged();
                }
            }
        }
        private global::System.Int32 _StatusId;
        partial void OnStatusIdChanging(global::System.Int32 value);
        partial void OnStatusIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.String _Status;
        partial void OnStatusChanging(global::System.String value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 StatusColor
        {
            get
            {
                return _StatusColor;
            }
            set
            {
                OnStatusColorChanging(value);
                ReportPropertyChanging("StatusColor");
                _StatusColor = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StatusColor");
                OnStatusColorChanged();
            }
        }
        private global::System.Int32 _StatusColor;
        partial void OnStatusColorChanging(global::System.Int32 value);
        partial void OnStatusColorChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MonitoringModel", "FK_DeviceStatusHistory_DeviceStatus", "DeviceStatusHistory")]
        public EntityCollection<DeviceStatusHistory> DeviceStatusHistories
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DeviceStatusHistory>("MonitoringModel.FK_DeviceStatusHistory_DeviceStatus", "DeviceStatusHistory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DeviceStatusHistory>("MonitoringModel.FK_DeviceStatusHistory_DeviceStatus", "DeviceStatusHistory", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MonitoringModel", "FK_DeviceStatusHistoryLastValues_DeviceStatus", "DeviceStatusHistoryLastValues")]
        public EntityCollection<DeviceStatusHistoryLastValue> DeviceStatusHistoryLastValues
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DeviceStatusHistoryLastValue>("MonitoringModel.FK_DeviceStatusHistoryLastValues_DeviceStatus", "DeviceStatusHistoryLastValues");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DeviceStatusHistoryLastValue>("MonitoringModel.FK_DeviceStatusHistoryLastValues_DeviceStatus", "DeviceStatusHistoryLastValues", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MonitoringModel", Name="DeviceStatusHistory")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DeviceStatusHistory : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DeviceStatusHistory object.
        /// </summary>
        /// <param name="statusHistoryId">Initial value of the StatusHistoryId property.</param>
        /// <param name="iPAddress">Initial value of the IPAddress property.</param>
        /// <param name="statusId">Initial value of the StatusId property.</param>
        /// <param name="date">Initial value of the Date property.</param>
        /// <param name="timestamp">Initial value of the timestamp property.</param>
        public static DeviceStatusHistory CreateDeviceStatusHistory(global::System.Int32 statusHistoryId, global::System.String iPAddress, global::System.Int32 statusId, global::System.DateTime date, global::System.Byte[] timestamp)
        {
            DeviceStatusHistory deviceStatusHistory = new DeviceStatusHistory();
            deviceStatusHistory.StatusHistoryId = statusHistoryId;
            deviceStatusHistory.IPAddress = iPAddress;
            deviceStatusHistory.StatusId = statusId;
            deviceStatusHistory.Date = date;
            deviceStatusHistory.timestamp = timestamp;
            return deviceStatusHistory;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 StatusHistoryId
        {
            get
            {
                return _StatusHistoryId;
            }
            set
            {
                if (_StatusHistoryId != value)
                {
                    OnStatusHistoryIdChanging(value);
                    ReportPropertyChanging("StatusHistoryId");
                    _StatusHistoryId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("StatusHistoryId");
                    OnStatusHistoryIdChanged();
                }
            }
        }
        private global::System.Int32 _StatusHistoryId;
        partial void OnStatusHistoryIdChanging(global::System.Int32 value);
        partial void OnStatusHistoryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String IPAddress
        {
            get
            {
                return _IPAddress;
            }
            set
            {
                OnIPAddressChanging(value);
                ReportPropertyChanging("IPAddress");
                _IPAddress = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("IPAddress");
                OnIPAddressChanged();
            }
        }
        private global::System.String _IPAddress;
        partial void OnIPAddressChanging(global::System.String value);
        partial void OnIPAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 StatusId
        {
            get
            {
                return _StatusId;
            }
            set
            {
                OnStatusIdChanging(value);
                ReportPropertyChanging("StatusId");
                _StatusId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StatusId");
                OnStatusIdChanged();
            }
        }
        private global::System.Int32 _StatusId;
        partial void OnStatusIdChanging(global::System.Int32 value);
        partial void OnStatusIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private global::System.DateTime _Date;
        partial void OnDateChanging(global::System.DateTime value);
        partial void OnDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] timestamp
        {
            get
            {
                return StructuralObject.GetValidValue(_timestamp);
            }
            set
            {
                OntimestampChanging(value);
                ReportPropertyChanging("timestamp");
                _timestamp = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("timestamp");
                OntimestampChanged();
            }
        }
        private global::System.Byte[] _timestamp;
        partial void OntimestampChanging(global::System.Byte[] value);
        partial void OntimestampChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MonitoringModel", "FK_DeviceStatusHistory_DeviceStatus", "DeviceStatus")]
        public DeviceStatu DeviceStatu
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DeviceStatu>("MonitoringModel.FK_DeviceStatusHistory_DeviceStatus", "DeviceStatus").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DeviceStatu>("MonitoringModel.FK_DeviceStatusHistory_DeviceStatus", "DeviceStatus").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DeviceStatu> DeviceStatuReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DeviceStatu>("MonitoringModel.FK_DeviceStatusHistory_DeviceStatus", "DeviceStatus");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DeviceStatu>("MonitoringModel.FK_DeviceStatusHistory_DeviceStatus", "DeviceStatus", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MonitoringModel", Name="DeviceStatusHistoryLastValue")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DeviceStatusHistoryLastValue : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DeviceStatusHistoryLastValue object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static DeviceStatusHistoryLastValue CreateDeviceStatusHistoryLastValue(global::System.Int32 id)
        {
            DeviceStatusHistoryLastValue deviceStatusHistoryLastValue = new DeviceStatusHistoryLastValue();
            deviceStatusHistoryLastValue.Id = id;
            return deviceStatusHistoryLastValue;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String IPAddress
        {
            get
            {
                return _IPAddress;
            }
            set
            {
                OnIPAddressChanging(value);
                ReportPropertyChanging("IPAddress");
                _IPAddress = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("IPAddress");
                OnIPAddressChanged();
            }
        }
        private global::System.String _IPAddress;
        partial void OnIPAddressChanging(global::System.String value);
        partial void OnIPAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> StatusId
        {
            get
            {
                return _StatusId;
            }
            set
            {
                OnStatusIdChanging(value);
                ReportPropertyChanging("StatusId");
                _StatusId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StatusId");
                OnStatusIdChanged();
            }
        }
        private Nullable<global::System.Int32> _StatusId;
        partial void OnStatusIdChanging(Nullable<global::System.Int32> value);
        partial void OnStatusIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _Date;
        partial void OnDateChanging(Nullable<global::System.DateTime> value);
        partial void OnDateChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MonitoringModel", "FK_DeviceStatusHistoryLastValues_DeviceStatus", "DeviceStatus")]
        public DeviceStatu DeviceStatu
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DeviceStatu>("MonitoringModel.FK_DeviceStatusHistoryLastValues_DeviceStatus", "DeviceStatus").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DeviceStatu>("MonitoringModel.FK_DeviceStatusHistoryLastValues_DeviceStatus", "DeviceStatus").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DeviceStatu> DeviceStatuReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DeviceStatu>("MonitoringModel.FK_DeviceStatusHistoryLastValues_DeviceStatus", "DeviceStatus");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DeviceStatu>("MonitoringModel.FK_DeviceStatusHistoryLastValues_DeviceStatus", "DeviceStatus", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MonitoringModel", Name="HistoricalData")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class HistoricalData : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new HistoricalData object.
        /// </summary>
        /// <param name="histocalDataId">Initial value of the HistocalDataId property.</param>
        /// <param name="idId">Initial value of the IdId property.</param>
        /// <param name="value">Initial value of the Value property.</param>
        /// <param name="date">Initial value of the Date property.</param>
        public static HistoricalData CreateHistoricalData(global::System.Int32 histocalDataId, global::System.Int32 idId, global::System.Double value, global::System.DateTime date)
        {
            HistoricalData historicalData = new HistoricalData();
            historicalData.HistocalDataId = histocalDataId;
            historicalData.IdId = idId;
            historicalData.Value = value;
            historicalData.Date = date;
            return historicalData;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 HistocalDataId
        {
            get
            {
                return _HistocalDataId;
            }
            set
            {
                if (_HistocalDataId != value)
                {
                    OnHistocalDataIdChanging(value);
                    ReportPropertyChanging("HistocalDataId");
                    _HistocalDataId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("HistocalDataId");
                    OnHistocalDataIdChanged();
                }
            }
        }
        private global::System.Int32 _HistocalDataId;
        partial void OnHistocalDataIdChanging(global::System.Int32 value);
        partial void OnHistocalDataIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IdId
        {
            get
            {
                return _IdId;
            }
            set
            {
                OnIdIdChanging(value);
                ReportPropertyChanging("IdId");
                _IdId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IdId");
                OnIdIdChanged();
            }
        }
        private global::System.Int32 _IdId;
        partial void OnIdIdChanging(global::System.Int32 value);
        partial void OnIdIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Value
        {
            get
            {
                return _Value;
            }
            set
            {
                OnValueChanging(value);
                ReportPropertyChanging("Value");
                _Value = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Value");
                OnValueChanged();
            }
        }
        private global::System.Double _Value;
        partial void OnValueChanging(global::System.Double value);
        partial void OnValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private global::System.DateTime _Date;
        partial void OnDateChanging(global::System.DateTime value);
        partial void OnDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] timestamp
        {
            get
            {
                return StructuralObject.GetValidValue(_timestamp);
            }
            set
            {
                OntimestampChanging(value);
                ReportPropertyChanging("timestamp");
                _timestamp = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("timestamp");
                OntimestampChanged();
            }
        }
        private global::System.Byte[] _timestamp;
        partial void OntimestampChanging(global::System.Byte[] value);
        partial void OntimestampChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MonitoringModel", "FK_HistoricalData_Ids", "Ids")]
        public Id Id
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Id>("MonitoringModel.FK_HistoricalData_Ids", "Ids").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Id>("MonitoringModel.FK_HistoricalData_Ids", "Ids").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Id> IdReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Id>("MonitoringModel.FK_HistoricalData_Ids", "Ids");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Id>("MonitoringModel.FK_HistoricalData_Ids", "Ids", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MonitoringModel", Name="Id")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Id : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Id object.
        /// </summary>
        /// <param name="id1">Initial value of the Id1 property.</param>
        /// <param name="iP">Initial value of the IP property.</param>
        /// <param name="moduleNumber">Initial value of the ModuleNumber property.</param>
        /// <param name="moduleType">Initial value of the ModuleType property.</param>
        /// <param name="pDIN">Initial value of the PDIN property.</param>
        public static Id CreateId(global::System.Int32 id1, global::System.String iP, global::System.Int32 moduleNumber, global::System.Int32 moduleType, global::System.Int32 pDIN)
        {
            Id id = new Id();
            id.Id1 = id1;
            id.IP = iP;
            id.ModuleNumber = moduleNumber;
            id.ModuleType = moduleType;
            id.PDIN = pDIN;
            return id;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id1
        {
            get
            {
                return _Id1;
            }
            set
            {
                if (_Id1 != value)
                {
                    OnId1Changing(value);
                    ReportPropertyChanging("Id1");
                    _Id1 = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id1");
                    OnId1Changed();
                }
            }
        }
        private global::System.Int32 _Id1;
        partial void OnId1Changing(global::System.Int32 value);
        partial void OnId1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String IP
        {
            get
            {
                return _IP;
            }
            set
            {
                OnIPChanging(value);
                ReportPropertyChanging("IP");
                _IP = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("IP");
                OnIPChanged();
            }
        }
        private global::System.String _IP;
        partial void OnIPChanging(global::System.String value);
        partial void OnIPChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ModuleNumber
        {
            get
            {
                return _ModuleNumber;
            }
            set
            {
                OnModuleNumberChanging(value);
                ReportPropertyChanging("ModuleNumber");
                _ModuleNumber = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModuleNumber");
                OnModuleNumberChanged();
            }
        }
        private global::System.Int32 _ModuleNumber;
        partial void OnModuleNumberChanging(global::System.Int32 value);
        partial void OnModuleNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ModuleType
        {
            get
            {
                return _ModuleType;
            }
            set
            {
                OnModuleTypeChanging(value);
                ReportPropertyChanging("ModuleType");
                _ModuleType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModuleType");
                OnModuleTypeChanged();
            }
        }
        private global::System.Int32 _ModuleType;
        partial void OnModuleTypeChanging(global::System.Int32 value);
        partial void OnModuleTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PDIN
        {
            get
            {
                return _PDIN;
            }
            set
            {
                OnPDINChanging(value);
                ReportPropertyChanging("PDIN");
                _PDIN = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PDIN");
                OnPDINChanged();
            }
        }
        private global::System.Int32 _PDIN;
        partial void OnPDINChanging(global::System.Int32 value);
        partial void OnPDINChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MonitoringModel", "FK_Calibration_Ids", "Calibration")]
        public EntityCollection<Calibration> Calibrations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Calibration>("MonitoringModel.FK_Calibration_Ids", "Calibration");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Calibration>("MonitoringModel.FK_Calibration_Ids", "Calibration", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MonitoringModel", "FK_HistoricalData_Ids", "HistoricalData")]
        public EntityCollection<HistoricalData> HistoricalDatas
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<HistoricalData>("MonitoringModel.FK_HistoricalData_Ids", "HistoricalData");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<HistoricalData>("MonitoringModel.FK_HistoricalData_Ids", "HistoricalData", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MonitoringModel", "FK_LastValues_Ids", "LastValues")]
        public LastValue LastValue
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LastValue>("MonitoringModel.FK_LastValues_Ids", "LastValues").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LastValue>("MonitoringModel.FK_LastValues_Ids", "LastValues").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<LastValue> LastValueReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LastValue>("MonitoringModel.FK_LastValues_Ids", "LastValues");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<LastValue>("MonitoringModel.FK_LastValues_Ids", "LastValues", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MonitoringModel", "FK_ReadIntervals_Ids", "ReadIntervals")]
        public EntityCollection<ReadInterval> ReadIntervals
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ReadInterval>("MonitoringModel.FK_ReadIntervals_Ids", "ReadIntervals");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ReadInterval>("MonitoringModel.FK_ReadIntervals_Ids", "ReadIntervals", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MonitoringModel", Name="LastValue")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LastValue : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LastValue object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static LastValue CreateLastValue(global::System.Int32 id)
        {
            LastValue lastValue = new LastValue();
            lastValue.Id = id;
            return lastValue;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> Value
        {
            get
            {
                return _Value;
            }
            set
            {
                OnValueChanging(value);
                ReportPropertyChanging("Value");
                _Value = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Value");
                OnValueChanged();
            }
        }
        private Nullable<global::System.Double> _Value;
        partial void OnValueChanging(Nullable<global::System.Double> value);
        partial void OnValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> HasError
        {
            get
            {
                return _HasError;
            }
            set
            {
                OnHasErrorChanging(value);
                ReportPropertyChanging("HasError");
                _HasError = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HasError");
                OnHasErrorChanged();
            }
        }
        private Nullable<global::System.Boolean> _HasError;
        partial void OnHasErrorChanging(Nullable<global::System.Boolean> value);
        partial void OnHasErrorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _Date;
        partial void OnDateChanging(Nullable<global::System.DateTime> value);
        partial void OnDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] timestamp
        {
            get
            {
                return StructuralObject.GetValidValue(_timestamp);
            }
            set
            {
                OntimestampChanging(value);
                ReportPropertyChanging("timestamp");
                _timestamp = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("timestamp");
                OntimestampChanged();
            }
        }
        private global::System.Byte[] _timestamp;
        partial void OntimestampChanging(global::System.Byte[] value);
        partial void OntimestampChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MonitoringModel", "FK_LastValues_Ids", "Ids")]
        public Id Id1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Id>("MonitoringModel.FK_LastValues_Ids", "Ids").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Id>("MonitoringModel.FK_LastValues_Ids", "Ids").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Id> Id1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Id>("MonitoringModel.FK_LastValues_Ids", "Ids");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Id>("MonitoringModel.FK_LastValues_Ids", "Ids", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MonitoringModel", Name="ReadInterval")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ReadInterval : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ReadInterval object.
        /// </summary>
        /// <param name="intervalId">Initial value of the IntervalId property.</param>
        /// <param name="idId">Initial value of the IdId property.</param>
        /// <param name="interval">Initial value of the Interval property.</param>
        /// <param name="maxInterval">Initial value of the MaxInterval property.</param>
        /// <param name="isEnabled">Initial value of the IsEnabled property.</param>
        public static ReadInterval CreateReadInterval(global::System.Int32 intervalId, global::System.Int32 idId, global::System.Int32 interval, global::System.Int32 maxInterval, global::System.Boolean isEnabled)
        {
            ReadInterval readInterval = new ReadInterval();
            readInterval.IntervalId = intervalId;
            readInterval.IdId = idId;
            readInterval.Interval = interval;
            readInterval.MaxInterval = maxInterval;
            readInterval.IsEnabled = isEnabled;
            return readInterval;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IntervalId
        {
            get
            {
                return _IntervalId;
            }
            set
            {
                if (_IntervalId != value)
                {
                    OnIntervalIdChanging(value);
                    ReportPropertyChanging("IntervalId");
                    _IntervalId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("IntervalId");
                    OnIntervalIdChanged();
                }
            }
        }
        private global::System.Int32 _IntervalId;
        partial void OnIntervalIdChanging(global::System.Int32 value);
        partial void OnIntervalIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IdId
        {
            get
            {
                return _IdId;
            }
            set
            {
                OnIdIdChanging(value);
                ReportPropertyChanging("IdId");
                _IdId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IdId");
                OnIdIdChanged();
            }
        }
        private global::System.Int32 _IdId;
        partial void OnIdIdChanging(global::System.Int32 value);
        partial void OnIdIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Interval
        {
            get
            {
                return _Interval;
            }
            set
            {
                OnIntervalChanging(value);
                ReportPropertyChanging("Interval");
                _Interval = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Interval");
                OnIntervalChanged();
            }
        }
        private global::System.Int32 _Interval;
        partial void OnIntervalChanging(global::System.Int32 value);
        partial void OnIntervalChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MaxInterval
        {
            get
            {
                return _MaxInterval;
            }
            set
            {
                OnMaxIntervalChanging(value);
                ReportPropertyChanging("MaxInterval");
                _MaxInterval = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MaxInterval");
                OnMaxIntervalChanged();
            }
        }
        private global::System.Int32 _MaxInterval;
        partial void OnMaxIntervalChanging(global::System.Int32 value);
        partial void OnMaxIntervalChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsEnabled
        {
            get
            {
                return _IsEnabled;
            }
            set
            {
                OnIsEnabledChanging(value);
                ReportPropertyChanging("IsEnabled");
                _IsEnabled = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsEnabled");
                OnIsEnabledChanged();
            }
        }
        private global::System.Boolean _IsEnabled;
        partial void OnIsEnabledChanging(global::System.Boolean value);
        partial void OnIsEnabledChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MonitoringModel", "FK_ReadIntervals_Ids", "Ids")]
        public Id Id
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Id>("MonitoringModel.FK_ReadIntervals_Ids", "Ids").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Id>("MonitoringModel.FK_ReadIntervals_Ids", "Ids").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Id> IdReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Id>("MonitoringModel.FK_ReadIntervals_Ids", "Ids");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Id>("MonitoringModel.FK_ReadIntervals_Ids", "Ids", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MonitoringModel", Name="Update")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Update : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Update object.
        /// </summary>
        /// <param name="updateId">Initial value of the UpdateId property.</param>
        /// <param name="updateVersion">Initial value of the UpdateVersion property.</param>
        /// <param name="updateDate">Initial value of the UpdateDate property.</param>
        public static Update CreateUpdate(global::System.Int32 updateId, global::System.Double updateVersion, global::System.DateTime updateDate)
        {
            Update update = new Update();
            update.UpdateId = updateId;
            update.UpdateVersion = updateVersion;
            update.UpdateDate = updateDate;
            return update;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UpdateId
        {
            get
            {
                return _UpdateId;
            }
            set
            {
                if (_UpdateId != value)
                {
                    OnUpdateIdChanging(value);
                    ReportPropertyChanging("UpdateId");
                    _UpdateId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UpdateId");
                    OnUpdateIdChanged();
                }
            }
        }
        private global::System.Int32 _UpdateId;
        partial void OnUpdateIdChanging(global::System.Int32 value);
        partial void OnUpdateIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double UpdateVersion
        {
            get
            {
                return _UpdateVersion;
            }
            set
            {
                OnUpdateVersionChanging(value);
                ReportPropertyChanging("UpdateVersion");
                _UpdateVersion = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdateVersion");
                OnUpdateVersionChanged();
            }
        }
        private global::System.Double _UpdateVersion;
        partial void OnUpdateVersionChanging(global::System.Double value);
        partial void OnUpdateVersionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime UpdateDate
        {
            get
            {
                return _UpdateDate;
            }
            set
            {
                OnUpdateDateChanging(value);
                ReportPropertyChanging("UpdateDate");
                _UpdateDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdateDate");
                OnUpdateDateChanged();
            }
        }
        private global::System.DateTime _UpdateDate;
        partial void OnUpdateDateChanging(global::System.DateTime value);
        partial void OnUpdateDateChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MonitoringModel", "FK_UpdateDetails_Update", "UpdateDetails")]
        public EntityCollection<UpdateDetail> UpdateDetails
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UpdateDetail>("MonitoringModel.FK_UpdateDetails_Update", "UpdateDetails");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UpdateDetail>("MonitoringModel.FK_UpdateDetails_Update", "UpdateDetails", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MonitoringModel", Name="UpdateDetail")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UpdateDetail : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UpdateDetail object.
        /// </summary>
        /// <param name="updateDetailId">Initial value of the UpdateDetailId property.</param>
        /// <param name="updateId">Initial value of the UpdateId property.</param>
        /// <param name="detailType">Initial value of the DetailType property.</param>
        /// <param name="detailDescription">Initial value of the DetailDescription property.</param>
        public static UpdateDetail CreateUpdateDetail(global::System.Int32 updateDetailId, global::System.Int32 updateId, global::System.Int32 detailType, global::System.String detailDescription)
        {
            UpdateDetail updateDetail = new UpdateDetail();
            updateDetail.UpdateDetailId = updateDetailId;
            updateDetail.UpdateId = updateId;
            updateDetail.DetailType = detailType;
            updateDetail.DetailDescription = detailDescription;
            return updateDetail;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UpdateDetailId
        {
            get
            {
                return _UpdateDetailId;
            }
            set
            {
                if (_UpdateDetailId != value)
                {
                    OnUpdateDetailIdChanging(value);
                    ReportPropertyChanging("UpdateDetailId");
                    _UpdateDetailId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UpdateDetailId");
                    OnUpdateDetailIdChanged();
                }
            }
        }
        private global::System.Int32 _UpdateDetailId;
        partial void OnUpdateDetailIdChanging(global::System.Int32 value);
        partial void OnUpdateDetailIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UpdateId
        {
            get
            {
                return _UpdateId;
            }
            set
            {
                OnUpdateIdChanging(value);
                ReportPropertyChanging("UpdateId");
                _UpdateId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdateId");
                OnUpdateIdChanged();
            }
        }
        private global::System.Int32 _UpdateId;
        partial void OnUpdateIdChanging(global::System.Int32 value);
        partial void OnUpdateIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DetailType
        {
            get
            {
                return _DetailType;
            }
            set
            {
                OnDetailTypeChanging(value);
                ReportPropertyChanging("DetailType");
                _DetailType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DetailType");
                OnDetailTypeChanged();
            }
        }
        private global::System.Int32 _DetailType;
        partial void OnDetailTypeChanging(global::System.Int32 value);
        partial void OnDetailTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DetailDescription
        {
            get
            {
                return _DetailDescription;
            }
            set
            {
                OnDetailDescriptionChanging(value);
                ReportPropertyChanging("DetailDescription");
                _DetailDescription = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DetailDescription");
                OnDetailDescriptionChanged();
            }
        }
        private global::System.String _DetailDescription;
        partial void OnDetailDescriptionChanging(global::System.String value);
        partial void OnDetailDescriptionChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MonitoringModel", "FK_UpdateDetails_Update", "Update")]
        public Update Update
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Update>("MonitoringModel.FK_UpdateDetails_Update", "Update").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Update>("MonitoringModel.FK_UpdateDetails_Update", "Update").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Update> UpdateReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Update>("MonitoringModel.FK_UpdateDetails_Update", "Update");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Update>("MonitoringModel.FK_UpdateDetails_Update", "Update", value);
                }
            }
        }

        #endregion

    }

    #endregion

    
}
